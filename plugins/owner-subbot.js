import fs from 'fs'

let handler = async (m, { conn, args, usedPrefix, command, isROwner }) => {
  try {
    if (!isROwner) {
      return conn.sendMessage(m.chat, {
        text: '„Ää‚úß„ÄãSolo los creadores del bot pueden usar este comando.',
        contextInfo: {
          ...rcanal.contextInfo
        }
      }, { quoted: m })
    }

    const action = args[0]?.toLowerCase()
    const botNumber = args[1]
    const ownerNumber = args[2]
    const ownerName = args[3]

    if (!action) {
      let txt = `‚ï≠‚îÄ„Äå ‚ú¶ ü§ñ …¢·¥ás·¥õ…™·¥è…¥ ·¥Ö·¥á s·¥ú ô  ô·¥è·¥õs ‚ú¶ „Äç‚îÄ‚ïÆ\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Uso:* ${usedPrefix + command} <acci√≥n> [par√°metros]\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Acciones disponibles:*\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} list\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} add <n√∫mero_bot> <n√∫mero_owner> <nombre>\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} remove <n√∫mero_bot>\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} info <n√∫mero_bot>\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Ejemplos:*\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} list\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} add 51901437507 51901437507 Sunkovv\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} remove 51901437507\n`
      txt += `‚ï∞‚û∫ ‚úß ${usedPrefix + command} info 51901437507\n`
      txt += `\n> LOVELLOUD Official`

      return conn.sendMessage(m.chat, {
        text: txt,
        contextInfo: {
          ...rcanal.contextInfo
        }
      }, { quoted: m })
    }

    const configPath = './sub-bot-owners.json'
    let config = { subBotOwners: {}, description: "Configuraci√≥n de owners para sub bots." }

    // Cargar configuraci√≥n existente
    if (fs.existsSync(configPath)) {
      try {
        config = JSON.parse(fs.readFileSync(configPath, 'utf-8'))
      } catch (error) {
        console.error('Error cargando configuraci√≥n:', error)
      }
    }

    if (action === 'list') {
      let txt = `‚ï≠‚îÄ„Äå ‚ú¶ ü§ñ  ü…™s·¥õ·¥Ä ·¥Ö·¥á s·¥ú ô  ô·¥è·¥õs ‚ú¶ „Äç‚îÄ‚ïÆ\n`
      txt += `‚îÇ\n`

      if (Object.keys(config.subBotOwners).length === 0) {
        txt += `‚ï∞‚û∫ ‚úß *No hay sub bots configurados*\n`
      } else {
        Object.entries(config.subBotOwners).forEach(([botNum, info], index) => {
          txt += `‚ï∞‚û∫ ‚úß *${index + 1}. Bot:* ${botNum}\n`
          txt += `‚ï∞‚û∫ ‚úß *Owner:* ${info.owner}\n`
          txt += `‚ï∞‚û∫ ‚úß *Nombre:* ${info.name}\n`
          txt += `‚ï∞‚û∫ ‚úß *Tipo:* ${info.type}\n`
          txt += `‚îÇ\n`
        })
      }

      txt += `\n> LOVELLOUD Official`

      return conn.sendMessage(m.chat, {
        text: txt,
        contextInfo: {
          ...rcanal.contextInfo
        }
      }, { quoted: m })

    } else if (action === 'add') {
      if (!botNumber || !ownerNumber || !ownerName) {
        return conn.sendMessage(m.chat, {
          text: '„Ää‚úß„ÄãFaltan par√°metros. Uso: .subbot add <n√∫mero_bot> <n√∫mero_owner> <nombre>',
          contextInfo: {
            ...rcanal.contextInfo
          }
        }, { quoted: m })
      }

      const cleanBotNumber = botNumber.replace(/[^0-9]/g, '')
      const cleanOwnerNumber = ownerNumber.replace(/[^0-9]/g, '')
      const ownerJid = cleanOwnerNumber + '@s.whatsapp.net'

      config.subBotOwners[cleanBotNumber] = {
        owner: ownerJid,
        name: ownerName,
        type: cleanBotNumber === '51958333972' ? 'Principal Bot' : 'Sub Bot'
      }

      fs.writeFileSync(configPath, JSON.stringify(config, null, 2))

      let txt = `‚ï≠‚îÄ„Äå ‚ú¶ ‚úÖ s·¥ú ô  ô·¥è·¥õ ·¥Ä…¢ Ä·¥á…¢·¥Ä·¥Ö·¥è ‚ú¶ „Äç‚îÄ‚ïÆ\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Bot:* ${cleanBotNumber}\n`
      txt += `‚ï∞‚û∫ ‚úß *Owner:* ${ownerJid}\n`
      txt += `‚ï∞‚û∫ ‚úß *Nombre:* ${ownerName}\n`
      txt += `‚ï∞‚û∫ ‚úß *Tipo:* ${config.subBotOwners[cleanBotNumber].type}\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Usuario:* @${m.sender.split('@')[0]}\n`
      txt += `\n> LOVELLOUD Official`

      return conn.sendMessage(m.chat, {
        text: txt,
        contextInfo: {
          ...rcanal.contextInfo,
          mentionedJid: [m.sender]
        }
      }, { quoted: m })

    } else if (action === 'remove') {
      if (!botNumber) {
        return conn.sendMessage(m.chat, {
          text: '„Ää‚úß„ÄãFalta el n√∫mero del bot. Uso: .subbot remove <n√∫mero_bot>',
          contextInfo: {
            ...rcanal.contextInfo
          }
        }, { quoted: m })
      }

      const cleanBotNumber = botNumber.replace(/[^0-9]/g, '')

      if (!config.subBotOwners[cleanBotNumber]) {
        return conn.sendMessage(m.chat, {
          text: '„Ää‚úß„ÄãNo se encontr√≥ un sub bot con ese n√∫mero.',
          contextInfo: {
            ...rcanal.contextInfo
          }
        }, { quoted: m })
      }

      const removedBot = config.subBotOwners[cleanBotNumber]
      delete config.subBotOwners[cleanBotNumber]

      fs.writeFileSync(configPath, JSON.stringify(config, null, 2))

      let txt = `‚ï≠‚îÄ„Äå ‚ú¶ ‚ùå s·¥ú ô  ô·¥è·¥õ ·¥á ü…™·¥ç…™…¥·¥Ä·¥Ö·¥è ‚ú¶ „Äç‚îÄ‚ïÆ\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Bot:* ${cleanBotNumber}\n`
      txt += `‚ï∞‚û∫ ‚úß *Owner:* ${removedBot.owner}\n`
      txt += `‚ï∞‚û∫ ‚úß *Nombre:* ${removedBot.name}\n`
      txt += `‚ï∞‚û∫ ‚úß *Tipo:* ${removedBot.type}\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Usuario:* @${m.sender.split('@')[0]}\n`
      txt += `\n> LOVELLOUD Official`

      return conn.sendMessage(m.chat, {
        text: txt,
        contextInfo: {
          ...rcanal.contextInfo,
          mentionedJid: [m.sender]
        }
      }, { quoted: m })

    } else if (action === 'info') {
      if (!botNumber) {
        return conn.sendMessage(m.chat, {
          text: '„Ää‚úß„ÄãFalta el n√∫mero del bot. Uso: .subbot info <n√∫mero_bot>',
          contextInfo: {
            ...rcanal.contextInfo
          }
        }, { quoted: m })
      }

      const cleanBotNumber = botNumber.replace(/[^0-9]/g, '')

      if (!config.subBotOwners[cleanBotNumber]) {
        return conn.sendMessage(m.chat, {
          text: '„Ää‚úß„ÄãNo se encontr√≥ un sub bot con ese n√∫mero.',
          contextInfo: {
            ...rcanal.contextInfo
          }
        }, { quoted: m })
      }

      const botInfo = config.subBotOwners[cleanBotNumber]

      let txt = `‚ï≠‚îÄ„Äå ‚ú¶ ‚ÑπÔ∏è …™…¥“ì·¥è s·¥ú ô  ô·¥è·¥õ ‚ú¶ „Äç‚îÄ‚ïÆ\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Bot:* ${cleanBotNumber}\n`
      txt += `‚ï∞‚û∫ ‚úß *Owner:* ${botInfo.owner}\n`
      txt += `‚ï∞‚û∫ ‚úß *Nombre:* ${botInfo.name}\n`
      txt += `‚ï∞‚û∫ ‚úß *Tipo:* ${botInfo.type}\n`
      txt += `‚îÇ\n`
      txt += `‚ï∞‚û∫ ‚úß *Usuario:* @${m.sender.split('@')[0]}\n`
      txt += `\n> LOVELLOUD Official`

      return conn.sendMessage(m.chat, {
        text: txt,
        contextInfo: {
          ...rcanal.contextInfo,
          mentionedJid: [m.sender]
        }
      }, { quoted: m })

    } else {
      return conn.sendMessage(m.chat, {
        text: '„Ää‚úß„ÄãAcci√≥n no v√°lida. Usa .subbot para ver las opciones disponibles.',
        contextInfo: {
          ...rcanal.contextInfo
        }
      }, { quoted: m })
    }

  } catch (e) {
    console.error(e)
    return conn.sendMessage(m.chat, {
      text: '„Ää‚úß„ÄãOcurri√≥ un error al procesar el comando.',
      contextInfo: {
        ...rcanal.contextInfo
      }
    }, { quoted: m })
  }
}

handler.command = ['subbot', 'sub-bot', 'subbotowner', 'subbotowners']
handler.owner = true

export default handler 